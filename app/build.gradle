apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.example.edwin.knowledgecode"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

/**
 *  编译并打包的：compile，implementation
 *  只编译的：provided， compileOnly
 *  只打包的：apk，runtimeOnly
 *  只debug编译打包的：debugCompile，debugImplementation
 *  只release编译打包的：releaseCompile，releaseImplementation
 *  只单元测试编译打包的：testCompile，testImplementation
 */

/**
 * 依赖里很关键的点：就是  1.最外层根project定义了仓库地址，总依赖啥的   2.其余项目gradle文件的路径
 * 依赖方式：项目依赖：以setting.gradle为根目录，然后找到对应的要依赖项目的gradle文件
 *         so,jar依赖：把jar包放到相应的项目的lib文件夹，gradle里编包路径有这个lib，打包编译时就会打进去了
 *         远程仓库jar包依：根project定义仓库地址，其余项目gradle写发布在远程仓库的那个组件项目名即可
 */
dependencies {
    implementation project(':javalib')
    implementation project(':androidlib')


    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:recyclerview-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
